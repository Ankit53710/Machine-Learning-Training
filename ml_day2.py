# -*- coding: utf-8 -*-
"""ML day2

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1sIK0YgSocnJEIWaZ3aLemZGO7IRkb6q-
"""

#implicit programming

from google.colab import files
uploaded=files.upload()

import pandas as pd
df=pd.read_excel(uploaded['plot price dataset.xlsx'])
x=df['plot size']
y=df['plot Price']

class mylr:
  def fit(self,x,y,epoch,learningrate):
    m=0
    c=0
    length=len(x)
    for j in range(epoch):
      for i in range(length):
        model_output=(m*x[i])+c
        error=(model_output-y[i])
        gm=(-2*error*x[i])/length
        gc=(-2*error)/length
        m+=(learningrate*gm)
        c+=(learningrate*gc)
    return m,c
  def predict(self,m,c,x):
    output=[]
    for i in range(len(x)):
      output.append(m*x[i]+c)
    return output

model=mylr()
m,c=model.fit(x,y,100,0.001)

o=model.predict(m,c,x)

import matplotlib.pyplot as plt
plt.scatter(x,y)
plt.scatter(x,o,c='red')

import matplotlib.pyplot as plt
plt.scatter(x,y)
plt.plot(x,o,c='red')

from sklearn.metrics import r2_score
r2_score(o,x)

#upper process using models of python
import numpy as np
xarr=np.array(x)
yarr=np.array(y)
xnew=xarr.reshape(-1,1)
ynew=yarr.reshape(-1,1)
from sklearn.linear_model import  LinearRegression

lr=LinearRegression()

lr.fit(xnew,ynew)
prediction=lr.predict(xnew)

plt.scatter(x,y)
plt.plot(xnew,prediction,c='red')

from sklearn.metrics import r2_score
r2_score(ynew,prediction)

from sklearn.model_selection import train_test_split
xtrain,xtest,ytrain,ytest=train_test_split(xnew,ynew,test_size=0.2)

from sklearn.linear_model import LinearRegression
lr=LinearRegression()
lr.fit(xtrain,ytrain)

model_output=lr.predict(xtest)
from sklearn.metrics import r2_score
print(r2_score(ytest,model_output))
r2_score(xtest,model_output)

import matplotlib.pyplot as plt
plt.scatter(xtrain,ytrain)
plt.plot(xtest,model_output)

import pickle
pickle.dump(lr,open('myml','wb'))

abc=pickle.load(open('myml','rb'))
abc.predict([[120]])